@page "/Form/Definition/Application/{PageRefreshParam}"
@page "/Form/Definition/Mantainance/{PageRefreshParam}"

@layout MainLayout

<div class="segment-container custom-background-default">
    <div class="grid-data-container segment-loader-container">
        <CustomLoader Visible="@(IsDataBusy)"
                            Text="@null" Class="initial-data-loader">
        </CustomLoader>
        <TelerikGrid Data="@Data.OrderBy(p => p.SortOrder)" Pageable="false" Sortable="false" Resizable="false" 
                        ScrollMode="@GridScrollMode.Scrollable" Groupable="false" Reorderable="false">
            <GridToolBarTemplate>
                <GridCommandButton Command="MyAddCommand" OnClick="@Add" Icon="SvgIcon.Plus">@TextProvider.Get("ADD")</GridCommandButton>
                <GridSearchBox></GridSearchBox>
            </GridToolBarTemplate>
            <GridColumns>
                <GridColumn Field="@nameof(FORM_Definition.FormCode)" Title="@TextProvider.Get("BACKEND_FORM_DEFINITION_CODE")" Width="200px"></GridColumn>
                <GridColumn Field="@nameof(FORM_Definition.AmtName)" Title="@TextProvider.Get("BACKEND_FORM_DEFINITION_ROLE")" Width="auto"></GridColumn>
                <GridColumn Field="@nameof(FORM_Definition.FORM_Name)" Title="@TextProvider.Get("BACKEND_FORM_DEFINITION_NAME")"></GridColumn>
                <GridColumn Field="@nameof(FORM_Definition.ApplicationDeadline)" Visible="@(NavManager.Uri.Contains("Application"))" Title="@TextProvider.Get("BACKEND_FORM_DEFINITION_APPLICATION_DEADLINE")" DisplayFormat="{0:dd.MM.yyyy HH:mm}" Width="200px"></GridColumn>                
                <GridColumn Field="@nameof(FORM_Definition.Enabled)" Title="@TextProvider.Get("BACKEND_FORM_DEFINITION_APPLICATION_ENABLED")" Width="120px">                    
                    <Template>
                        @{
                            FORM_Definition item = context as FORM_Definition;

                            <TelerikSwitch @bind-Value="@item.Enabled" Enabled="false" OnLabel="@TextProvider.Get("YES")" OffLabel="@TextProvider.Get("NO")" Width="65px" Class="list-item-switch"></TelerikSwitch>                            
                        }
                    </Template>
                </GridColumn>
                <GridCommandColumn Width="160px" Title="@TextProvider.Get("ACTIONS")">
                    @{
                        FORM_Definition item = context as FORM_Definition;

                        if (item != null)
                        {
                            <div class="table-toolbar">
                                <div class="table-sorter-buttons">
                                    @if(item.SortOrder != Data.Min(p => p.SortOrder))
                                    {
                                        <GridCommandButton Class="btn btn-secondary" OnClick="@(() => MoveUp(item))" Icon="SvgIcon.ChevronUp"></GridCommandButton>
                                    }
                                    @if(item.SortOrder != Data.Max(p => p.SortOrder))
                                    {
                                        <GridCommandButton Class="btn btn-secondary" OnClick="@(() => MoveDown(item))" Icon="SvgIcon.ChevronDown"></GridCommandButton>                                    
                                    }
                                </div>
                                <GridCommandButton Command="MyEditCommand" Class="btn btn-secondary" OnClick="@(() => Edit(item))" Icon="SvgIcon.Pencil" title="@TextProvider.Get("TOOLTIP_EDIT")"></GridCommandButton>
                                <GridCommandButton Command="MyDeleteCommand" Class="btn btn-secondary" OnClick="@(() => Delete(item))" Icon="SvgIcon.Trash" title="@TextProvider.Get("TOOLTIP_DELETE")"></GridCommandButton>                                
                            </div>
                        }
                    }
                </GridCommandColumn>
            </GridColumns>
        </TelerikGrid>
    </div>
</div>    