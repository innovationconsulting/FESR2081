@if (TagList != null && TagsToAdd != null)
{
    <div class="tag-control-container" @onclick="ToggleTagsDropdown" @onclick:stopPropagation="true">
        <div class="tag-list-container">
            @if (TagList.Count() > 0)
            {   
                @foreach (var item in TagList)
                {
                    var tag = AllTags.FirstOrDefault(p => p.ID == item);

                    if (tag != null)
                    {
                        <div class="tag-item" style="background-color: @(tag.Color + "aa") !important; border-color: @(tag.Color) !important" onclick="@(() => RemoveTag(tag))" @onclick:stopPropagation="true">
                            <div class="tag-description font-small">
                                @tag.Description
                            </div>
                        </div>
                    }
                }
            }
            else
            {
                <div class="font-small">
                    @TextProvider.Get("TASK_FILTER_TAG_PLACEHOLDER")
                </div>
            }
        </div>
        <div class="tag-tool">
            <div class="tag-button" @onclick="ToggleTagsDropdown" @onclick:stopPropagation="true">
                <i class="fa-regular fa-chevron-down"></i>
            </div>
        </div>
        @if (TagsDropdownVisibility)
        {
            <div class="tag-dropdown" id="tag-dropdown">
                <div class="tag-dropdown-container">
                    <Virtualize Items="@TagsToAdd.OrderBy(p => p.SortOrder).ToList()" Context="tag" OverscanCount="3">
                        <div class="tag-item-container" @onclick="@(() => AddTag(tag))" @onclick:stopPropagation="true">
                            <div class="tag-item" style="background-color: @(tag.Color + "aa") !important; border-color: @(tag.Color) !important">
                                <div class="tag-description font-small">
                                    @tag.Description
                                </div>
                            </div>
                        </div>
                    </Virtualize>
                </div>
            </div>
        }
    </div>
}